<?xml version="1.0" encoding='utf-8'?>

<!DOCTYPE hrc PUBLIC
  "-//Cail Lomecb//DTD Colorer HRC take5//EN"
  "http://colorer.sf.net/2003/hrc.dtd">

<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">

  <prototype name="glsl" group="other" description="GLSL (*.glsl)">
    <filename weight="4">/\.glsl$/i</filename>
  </prototype>

  <type name="glsl">

    <import type="c"/>

    <scheme name="glsl">

      <!--fixes () brackets content in void main(...)  -->
      <block start="/(\()/" end="/(\))/" scheme="glsl"
        region00="def:Symbol" region01="def:PairStart" region10="def:Symbol" region11="def:PairEnd"/>

      <keywords region="def:Directive">
        <word name='ifdef'/>
        <word name='endif'/>
        <word name='else'/>
        <word name='uniform'/>
        <word name="in"/>
        <word name="out"/>
        <word name="varying"/>
        <word name="mediump"/>
        <word name="attribute"/>
        <word name="precision"/>
        <word name="highp"/>
      </keywords>

      <keywords region="def:Keyword">
        <word name="vec2"/>
        <word name="vec3"/>
        <word name="vec4"/>
        <word name="ivec2"/>
        <word name="ivec3"/>
        <word name="ivec4"/>
        <word name="mat4"/>
        <word name="sampler2D"/>
        <word name="discard"/>
      </keywords>

      <keywords region="def:UndefFunctionKeyword">
        <word name="cross"/>
        <word name="dot"/>
        <word name="mod"/>
        <word name="atan"/>
        <word name="atan2"/>
        <word name="normalize"/>
        <word name="texture2D"/>
        <word name="clamp"/>
      </keywords>

      <keywords region="def:Directive">
        <word name="gl_Position"/>
        <word name="gl_FragColor"/>
      </keywords>

      

      <inherit scheme="c">
        <virtual scheme="c" subst-scheme="glsl"/>
      </inherit>

    </scheme>

  </type>

  <prototype name="hlsl" group="other" description="HLSL (*.hlsl)">
    <filename weight="4">/\.hlsl$/i</filename>
  </prototype>

  <type name="hlsl">
    <import type="glsl"/>

    <scheme name="hlsl">

      <keywords region="def:Directive">
        <word name="sampler"/>
        <word name="register"/>
        <word name="packoffset"/>
        <word name="TEXCOORD0"/>
        <word name="COLOR"/>
        <word name="NORMAL"/>
        <word name="BINORMAL"/>
        <word name="POSITION"/>
        <word name="TANGENT"/>
        <word name="DEPTH"/>
      </keywords>

      <keywords region="def:Keyword">
        <word name="float1"/>
        <word name="float2"/>
        <word name="float3"/>
        <word name="float4"/>
        <word name="int1"/>
        <word name="int2"/>
        <word name="int3"/>
        <word name="int4"/>
      </keywords>

      <keywords region="def:FunctionKeyword">
        <word name="tex2D"/>
      </keywords>

      <inherit scheme="glsl">
        <virtual scheme="glsl" subst-scheme="hlsl"/>
      </inherit>

    </scheme>
  </type>

  <prototype name="htmlExt" group="extras" description="HTML Extended (*.html)">
    <filename weight="4">/\.html$/i</filename>
  </prototype>

  <type name="htmlExt">
    <import type="html"/>
    <import type="glsl"/>
    <import type="hlsl"/>

    <!--we need an extra scheme to preserve html tags-->
    <scheme name="shaderScript">
      <block start="/~/" end="/[?%]?~1(&gt;)/" 
        scheme="htmlCore" region="htmlUnknowParam" region11="htmlTagBr"/>
      <inherit scheme="glsl" />
      <inherit scheme="hlsl" />
    </scheme>

    <scheme name="htmlExt">

      <!--use wrapped glslScript scheme here-->
      <block start="/ ((&lt;) \s* (script)\M\b \s* .*shader.* &gt;?)/ix" end="/(&lt;\/(script)\&gt;)/ix"
        scheme="shaderScript"
        region01="PairStrongStart" region10="PairStrongEnd"
        region02="htmlTagBr" region03="htmlOpenTag" region11="htmlTagBr" region12="htmlCloseTag"/>

      <inherit scheme="html">
        <virtual scheme="html" subst-scheme="htmlExt"/>
      </inherit>

    </scheme>

  </type>

</hrc>
